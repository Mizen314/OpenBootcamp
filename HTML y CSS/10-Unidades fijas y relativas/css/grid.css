.contenedor {
    display: grid;
    gap: 0.5rem;
    /* grid-template-columns: auto auto auto;
    column-gap: 0.1rem;
    row-gap: 0.5rem;
    grid-template-columns: repeat(3,auto);
    grid-template-columns: 20px 3rem 25vw;
    
    Esta parte de templates ya empieza a parecerse más a bootstrap, y en este caso lo que se muestra abajo, es que
    la unidad de medida que se puede usar son las fracciones. se puede ver como en este punto se utilizan para las columnas 1fraccion para la primera, 1 para la seguna y 3 para la 3era columna.
    Tambien se puede aplicar el mismo principio para las filas.
    */
    grid-template-columns: 1fr 1fr 3fr;
    grid-template-rows: 200px 5rem 100px;

    /* Aca se introduce otro concepto de las 
    grids areas, que basicamente se trabajan como una gran tabla pero que pueden ir seteandose las mismas para generar diversas formas 
    Ej:
    aca se las define por ubicaciones y jerarquia
    */
    
    grid-template-areas: 'head head head' 'main main aside' 'footer footer footer'

    
}

.item {
    background-color: aquamarine;
    padding: 0.25rem;
    font-size: 2rem;
    border: solid 1px blue;
    }

.item1 {
    grid-area: head;
}

.item4 {
    /* En este caso lo que indica es el tamaño del area 
    desde la fila 2 y columna 1
    hasta la fila 4 y columna 3
    grid-area: 2/1 4/3;
    partiendo de fila/columna */
}
.item3 {
    /* funciona para definir espacio, de acuerdo con la grilla defninida anteiorermente */
    grid-column: 2 / 3;
}
.item9 {
    grid:footer;
}